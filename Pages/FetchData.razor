@page "/fetchdata"

@using BlazorServerSideAAD.Data
@inject WeatherForecastService ForecastService
@inject Microsoft.Identity.Web.ITokenAcquisition TokenAcquisitionService


<h1>Weather forecast</h1>

<p>This component demonstrates fetching data from a service.</p>

@if (forecasts == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Date</th>
                <th>Temp. (C)</th>
                <th>Temp. (F)</th>
                <th>Summary</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var forecast in forecasts)
            {
                <tr>
                    <td>@forecast.Date.ToShortDateString()</td>
                    <td>@forecast.TemperatureC</td>
                    <td>@forecast.TemperatureF</td>
                    <td>@forecast.Summary</td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private WeatherForecast[] forecasts;

    protected override async Task OnInitializedAsync()
    {
        forecasts = await ForecastService.GetForecastAsync(DateTime.Now);

        try
        {

            var at = await TokenAcquisitionService.GetAccessTokenForUserAsync(Startup.scopesToRequestList);
            var client = new HttpClient();
            client.DefaultRequestHeaders.Authorization = new System.Net.Http.Headers.AuthenticationHeaderValue("Bearer", at);


            var data = await client.GetAsync("https://graph.microsoft.com/v1.0/me");
            if (data != null && data.IsSuccessStatusCode)
            {

            }
        }
        catch (Exception ex)
        {

        }
    }
}
